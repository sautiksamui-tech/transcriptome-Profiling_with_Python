df.info()
df.drop(['Unnamed: 0'],axis=1)
len(df.iloc[0])
# Data-preprocessing: Standardizing the data
from sklearn.preprocessing import StandardScaler

standardized_data = StandardScaler().fit_transform(df.drop(['Unnamed: 0','ss'],axis=1))
print(standardized_data.shape)
# Applying PCA function on training
# and testing set of X component
from sklearn.decomposition import PCA

pca = PCA(n_components = 2)

X_train = pca.fit_transform(standardized_data)
# X_test = pca.transform(X_test)

explained_variance = pca.explained_variance_ratio_  
for i in X_train:
  print(i)
  a=[]
b=[]
for i in X_train:
  a.append(i[0])
for j in X_train:
  b.append(j[1])
  sns.scatterplot(data=df, x=b, y=a,hue='type')
print(len(df),len(standardized_data),len(X_train))
print(a)
print(b)
